
// MAXWELL_B
engine _3D 0xB197;

0x040 NoOperation;
0x044 WaitForIdle;
0x045 MmeInstructionRamPointer;
0x046 MmeInstructionRamLoad pipe;
0x047 MmeStartAddressRamPointer;
0x048 MmeStartAddressRamLoad pipe;
0x049 MmeShadowRamControl enum (
	0 MethodTrack;
	1 MethodTrackWithFilter;
	2 MethodPassthrough;
	3 MethodReplay;
);

0x054 SetInstrumentationMethodHeader;
0x055 SetInstrumentationMethodData;

0x083 LineWidthSeparate;

0x086 Unknown086;

0x0b2 SyncptAction bits (
	0..11 Id;
	16    FlushCache;
	20    Increment;
);

0x0b8 SurfaceDecompress;

0x0BA ZcullUnkFeatureEnable bool;
0x0BB Unknown0bb;

0x0c0 Unknown0c0;

0x0c3 Unknown0c3;

0x0C4 SetSpaVersion bits (
	0..7  Minor;
	8..15 Major;
);

0x0c8 TessellationMode bits (
	0..1 PrimitiveType enum (
		0 Isolines;
		1 Triangles;
		2 Quads;
	);
	4..5 Spacing enum (
		0 Equal;
		1 FractionalOdd;
		2 FractionalEven;
	);
	8..9 WindingAndConnectednessFlags enum (
		0 CcwAndNotConnected;
		1 IsolineConnected;
		1 TriangleCw;
		2 TriangleConnected;
		3 TriangleConnectedCw;
	);
);
0x0c9 TessellationOuterLevels array[4] float;
0x0cd TessellationInnerLevels array[2] float;
0x0dd Unknown0dd;
0x0df RasterizerEnable bool;

0x1d3 Unknown1d3;

0x1DF SetShaderLocalMemoryWindow;

0x1E4 SetShaderLocalMemory iova;
0x1E6 SetShaderLocalMemorySize iova; // 40-bit size

0x1F0 ZcullWidth;
0x1F1 ZcullHeight;
0x1F2 ZcullDepth;
0x1F3 ZcullUnknown0;

0x1F8 ZcullImageSizeAliquots;
0x1F9 ZcullLayerSizeAliquots;

0x200 RenderTarget array[8] (
	0x00 Addr iova;
	0x02 Horizontal;
	0x03 Vertical;
	0x04 Format;
	0x05 TileMode bits (
		0..3  Width;
		4..7  Height;
		8..11 Depth;
		12    IsLinear;
		16    Is3D;
	);
	0x06 ArrayMode bits (
		0..15 Layers;
		16    Volume;
	);
	0x07 LayerStride;
	0x08 BaseLayer;
	0x10 next;
);

0x280 ViewportTransform array[16] (
	0x00 ScaleX float;
	0x01 ScaleY float;
	0x02 ScaleZ float;
	0x03 TranslateX float;
	0x04 TranslateY float;
	0x05 TranslateZ float;
	0x06 Swizzles bits (
		0..2   X;
		4..6   Y;
		8..10  Z;
		12..14 W;
	);
	0x07 SubpixelPrecisionBias bits (
		0..4  X;
		8..12 Y;
	);
	0x08 next;
);

0x300 Viewport array[16] (
	0x00 Horizontal bits (
		0..15  X;
		16..31 Width;
	);
	0x01 Vertical bits (
		0..15  Y;
		16..31 Height;
	);
	0x02 DepthRangeNear float;
	0x03 DepthRangeFar float;
	0x04 next;
);

0x340 WindowRectangle array[8] (
	0x00 Horizontal bits (
		0..15  Min;
		16..31 Max;
	);
	0x01 Vertical bits (
		0..15  Min;
		16..31 Max;
	);
	0x02 next;
);

0x359 SetApiVisibleCallLimit bits (
	0..3 Cta enum (
		0  _0;
		1  _1;
		2  _2;
		3  _4;
		4  _8;
		5  _16;
		6  _32;
		7  _64;
		8  _128;
		15 NoCheck;
	);
);

0x35D DrawArraysFirst;
0x35E DrawArraysCount; // seems to trigger drawing?
0x35F SetDepthMode enum (
	0 MinusOneToOne;
	1 ZeroToOne;
);

0x360 ClearColor array[4];
0x364 ClearDepth;

0x367 ColorReductionEnable bool;
0x368 ClearStencil;

0x369 InvalidateShaderCaches bits (
	0  Instruction bool;
	4  GlobalData bool;
	12 Constant bool;
);

0x36B SetPolygonModeFront enum (
	0x1B00 Point;
	0x1B01 Line;
	0x1B02 Fill;
);
0x36C SetPolygonModeBack enum (
	0x1B00 Point;
	0x1B01 Line;
	0x1B02 Fill;
);
0x36D PolygonSmoothEnable bool;

0x36F ZcullClearDepth bits (
	0  IsLessThanHalf bool;
	16 IsOneOrZero bool;
);

0x370 PolygonOffsetPointEnable bool;
0x371 PolygonOffsetLineEnable bool;
0x372 PolygonOffsetFillEnable bool;
0x373 TessellationPatchSize;
0x374 AdvancedBlendEnable bool;

0x376 ZcullStencilCriteria bits (
	0..7   Func; // same as DkCompareOp but starting with 0 instead of 1
	16..23 FuncRef;
	24..31 FuncMask;
);

0x378 FragmentBarrier;

0x37A PrimitiveRestartWithDrawArrays bool;

0x380 Scissor array[16] (
	0x00 Enable bool;
	0x01 Horizontal bits (
		0..15  Min;
		16..31 Max;
	);
	0x02 Vertical bits (
		0..15  Min;
		16..31 Max;
	);
	0x04 next;
);

0x3D5 StencilBackFuncRef;
0x3D6 StencilBackMask;
0x3D7 StencilBackFuncMask;
0x3D8 TiledCacheEnable bool;
0x3D9 TiledCacheTileSize bits (
	0..15  Width;
	16..31 Height;
);
0x3DA TiledCacheUnknownConfig0;
0x3DB TiledCacheUnknownConfig1;
0x3DC TiledCacheUnknownConfig3;
0x3DD InvalidateTextureDataCache bits (
	// Theoretical register, same as InvalidateTextureDataCacheNoWfi but with implicit Wfi
	0 Lines enum (
		0 All;
		1 One;
	);
	4..25 Tag;
);
0x3DE DiscardRenderTarget bits (
	0    DepthStencil bool;
	4..6 Color;
);
0x3DF TiledCacheBarrier;
0x3E0 TiledCacheFlush enum (
	0 Flush;
	1 Unknown;
);
0x3E1 VertexRunoutBufferIova iova;
0x3E3 Unknown3e3;

0x3E7 DepthBoundsNear;
0x3E8 DepthBoundsFar;

0x3ED SetMultisampleRasterEnable bool;
0x3EE MultisampleRasterSamples;
0x3EF MultisampleSampleMask array[4];

0x3F5 CoverageModulationMode bits (
	0 Color;
	1 Alpha;
);
0x3F6 SetCoverageModulationTableEnable bool;
0x3F7 Unknown3f7;
0x3F8 DepthTargetAddr iova;
0x3FA DepthTargetFormat;
0x3FB DepthTargetTileMode bits (
	0..3  Width;
	4..7  Height;
	8..11 Depth;
);
0x3FC DepthTargetLayerStride;
0x3FD ScreenScissorHorizontal bits (
	0..15  X;
	16..31 Width;
);

0x3FE ScreenScissorVertical bits (
	0..15  Y;
	16..31 Height;
);

0x400 Unknown400;

0x40C CoverageModulationTable array[4];

0x433 ColorReductionConfig0;

0x438 ColorReductionConfig1;
0x439 ColorReductionConfig2;
0x43A ColorReductionConfig3;
0x43B ColorReductionConfig4;
0x43C ColorReductionConfig5;

0x43E ClearBufferFlags bits (
	0 StencilMask bool;
	8 Scissor bool;
	12 Viewport bool;
);

0x43F Unknown43f;

0x442 TiledCacheUnknownConfig2;

0x446 VertexIdBase; // theory: this is the base value for gl_VertexID (a[0x2fc])

0x44C Unknown44c;
0x44D TiledCacheUnkFeatureEnable bool;

0x44F FillRectangleConfig bits (
	1 Enable bool;
);
0x450 Unknown450;
0x451 UnknownFlush;
0x452 SetConservativeRasterEnable bool;

0x458 VertexAttribState array[32] bits (
	0..4   BufferId;
	6      IsFixed;
	7..20  Offset;
	21..26 Size; // see DkVtxAttribSize enum
	27..29 Type; // see DkVtxAttribType enum
	31     IsBgra;
);

0x478 MultisampleSampleLocations array[4]; // 16 locations (one per byte)

0x47E MultisampleCoverageToColor bits (
	0    Enable;
	4..6 Target;
);
0x47F ResolveDepthValues;

0x485 TiledCacheUnkConfig;

0x487 RenderTargetControl bits (
	0..3   NumTargets;
	4..6   Map0;
	7..9   Map1;
	10..12 Map2;
	13..15 Map3;
	16..18 Map4;
	19..21 Map5;
	22..24 Map6;
	25..27 Map7;
);

0x488 Unknown488;

0x48A DepthTargetHorizontal;
0x48B DepthTargetVertical;
0x48C DepthTargetArrayMode bits (
	0..15 Layers;
	16    Volume bool; //???
);
0x48D LinkedTsc bool; //???

0x4A2 InvalidateTextureDataCacheNoWfi bits (
	0 Lines enum (
		0 All;
		1 One;
	);
	4..25 Tag;
);

0x4A4 Unknown4a4;

0x4B2 InvalidateZcullNoWfi; // Theoretical
0x4B3 DepthTestEnable bool;

0x4B6 Unknown4b6 array[2];

0x4B8 AlphaToCoverageDither bool;
0x4B9 IndependentBlendEnable bool;
0x4BA DepthWriteEnable bool;
0x4BB AlphaTestEnable bool;

0x4C3 DepthTestFunc enum (
	1 Never;
	2 Less;
	3 Equal;
	4 Lequal;
	5 Greater;
	6 NotEqual;
	7 Gequal;
	8 Always;
);
0x4C4 AlphaTestRef float;
0x4C5 AlphaTestFunc enum (
	1 Never;
	2 Less;
	3 Equal;
	4 Lequal;
	5 Greater;
	6 NotEqual;
	7 Gequal;
	8 Always;
);

0x4C7 BlendConstant array[4] float;

0x4D8 ColorBlendEnable array[8] bool;
0x4E0 StencilEnable bool;
0x4E1 StencilFrontOpFail;
0x4E2 StencilFrontOpZFail;
0x4E3 StencilFrontOpZPass;
0x4E4 StencilFrontFunc;
0x4E5 StencilFrontFuncRef;
0x4E6 StencilFrontFuncMask;
0x4E7 StencilFrontMask;

0x4EB SetWindowOriginMode bits (
	0 NegateY; // wtf
	4 Mode enum ( // nouveau calls this TriangleRastFlip
		0 UpperLeft; // as in Direct3D/Vulkan
		1 LowerLeft; // as in OpenGL
	);
);
0x4EC LineWidthSmooth;
0x4ED LineWidthAliased;

0x509 InvalidateSamplerCacheNoWfi bits (
	0 Lines enum (
		0 All;
		1 One;
	);
	4..25 Tag;
);

0x50A InvalidateTextureHeaderCacheNoWfi bits (
	// Theoretical
	0 Lines enum (
		0 All;
		1 One;
	);
	4..25 Tag;
);

0x50D DrawBaseVertex; // It is unknown if this is only used during indexed drawing as the vertex offset, or if it affects non-indexed drawing too.
0x50E DrawBaseInstance;

0x514 Unknown514;

0x544 ClipDistanceEnable; // bitmask, one bit for each clip distance (8 in total)
0x545 SampleCounterEnable bool;
0x546 PointSpriteSize float;
0x547 ZcullStatCountersEnable bool;
0x548 PointSpriteEnable bool;

0x54A SetShaderExceptions bool;

0x54D MultisampleEnable bool;
0x54E DepthTargetEnable bool;
0x54F MultisampleControl bits (
	0 AlphaToCoverage bool;
	4 AlphaToOne bool;
);

0x557 SetTexSamplerPool iova;
0x559 SetTexSamplerPoolMaximumIndex;

0x55B PolygonOffsetFactor;
0x55C LineSmoothEnable bool;
0x55D SetTexHeaderPool iova;
0x55F SetTexHeaderPoolMaximumIndex;

0x564 ZcullRegion; //???
0x565 StencilTwoSideEnable bool;
0x566 StencilBackOpFail;
0x567 StencilBackOpZFail;
0x568 StencilBackOpZPass;
0x569 StencilBackFunc;

0x56D CsaaEnable bool;

0x56F PolygonOffsetUnits;

0x572 ZcullZetaType;
0x573 SetRenderLayer bits (
	0..15 Index;
	16 UseIndexFromVTG bool;
);

0x574 MultisampleMode; // uses maxwell::MsaaMode enum

0x579 EdgeFlag bool;

0x57F ZcullWindowOffsetX;
0x580 ZcullWindowOffsetY;

0x581 PointCoordReplace bits (
	0..1  Unknown0;
	2     CoordOrigin enum (
		0 LowerLeft;
		1 UpperLeft;
	);
	3..12 Enable; // wait what, not a single bit?
);

0x582 SetProgramRegion iova;

0x584 Unknown584;
0x585 VertexEndGl;
0x586 VertexBeginGl bits (
	0..15 Primitive enum (
		0  Points;
		1  Lines;
		2  LineLoop;
		3  LineStrip;
		4  Triangles;
		5  TriangleStrip;
		6  TriangleFan;
		7  Quads;
		8  QuadStrip;
		9  Polygon;
		10 LinesAdjacency;
		11 LineStripAdjacency;
		12 TrianglesAdjacency;
		13 TriangleStripAdjacency;
		14 Patches;
	);
	26 InstanceNext;
	27 InstanceCont;
);

0x591 PrimitiveRestartEnable bool;
0x592 PrimitiveRestartIndex;
0x593 VertexIdConfig bits (
	12 DrawArraysAddStart bool; // Adds the value of DrawArraysFirst to gl_VertexID (a[0x2fc]), during non-indexed drawing
);

0x596 PointSmoothEnable bool;
0x597 PointRasterRules enum (
	0 OpenGL;
	1 Direct3D;
);

0x59A LineSmoothBlur enum (
	0 Low;
	1 Medium;
	2 High;
);

0x59B LineStippleEnable bool;
0x5A0 LineStipplePattern;
0x5A1 ProvokingVertexLast bool;

0x5A3 PolygonStippleEnable bool;

0x5AA Unknown5aa;

0x5AD Unknown5ad;

0x5C0 PolygonStipplePattern array[32];

0x5E5 Unknown5e5;

0x5F2 IndexArrayStartIova iova;
0x5F4 IndexArrayLimitIova iova;
0x5F6 IndexArrayFormat enum (
	0 Uint8;
	1 Uint16;
	2 Uint32;
);
0x5F7 DrawElementsFirst;
0x5F8 DrawElementsCount; // seems to trigger drawing?

0x61F PolygonOffsetClamp;
0x620 IsVertexArrayPerInstance array[16] bool;

0x644 VertexProgramPointSize bits (
	0 Enable bool;
	4..11 Unknown4;
);

0x646 CullFaceEnable bool;
0x647 SetFrontFace enum (
	0x900 CW;
	0x901 CCW;
);
0x648 SetCullFace enum (
	0x404 Front;
	0x405 Back;
	0x408 FrontAndBack;
);
0x649 SetPixelCenterInteger bool;

0x64B ViewportTransformEnable bool;

0x64F ViewVolumeClipControl bits (
	0      ForceDepthRangeZeroToOne bool;
	1..2   Unknown1;
	3      DepthClampNear bool;
	4      DepthClampFar  bool;
	7      Unknown7 bool;
	10     Unknown10 bool;
	11     Unknown11 bool;
	12..13 Unknown12;
);

0x65A ZcullUnknown65a;
0x65B ZcullTestMask bits (
	0 AllowZIncrease; // "disables coarse rejection/pass for GT/LT direction"
	4 AllowZDecrease; // "disables coarse rejection/pass for LT/GT direction"
);

0x66F DepthBoundsEnable bool;

0x670 Unknown670;
0x671 ColorLogicOpEnable bool;
0x672 ColorLogicOpType; // uses GL_* enum values (yes seriously)

0x674 ClearBuffers bits (
	0      Depth bool;
	1      Stencil bool;
	2      Red bool;
	3      Green bool;
	4      Blue bool;
	5      Alpha bool;
	6..9   TargetId;
	10..20 LayerId;
);

0x680 ColorWriteMask array[8] bits (
	0  Red bool;
	4  Green bool;
	8  Blue bool;
	12 Alpha bool;
);

0x68B PipeNop;

0x6C0 SetReportSemaphoreOffset iova;
0x6C2 SetReportSemaphorePayload;
0x6C3 SetReportSemaphore bits (
	0..1 Operation enum (
		0 Release;
		1 Acquire;
		2 Unknown;
		3 Trap;
	);
	2 FlushDisable;
	3 ReductionEnable;
	4 FenceEnable;
	9..11 ReductionOp enum (
		0 Add;
		1 Min;
		2 Max;
		3 Inc;
		4 Dec;
		5 And;
		6 Or;
		7 Xor;
	);
	12..15 Unit enum (
		1 VFetch;
		2 VP;
		4 Rast;
		5 StrmOut;
		6 GP;
		7 ZCull;
		10 Prop;
		15 Crop;
	);
	16 SyncCondition enum (
		0 NotEqual;
		1 GreaterThan;
	);
	17..18 Format enum (
		0 Unsigned32;
		1 Signed32;
	);
	20 AwakenEnable;
	28 StructureSize enum (
		0 FourWords;
		1 OneWord;
	);
);

0x700 VertexArray array[16] (
	0x00 Config bits (
		0..11 Stride;
		12    Enable bool;
	);
	0x01 Start iova;
	0x03 Divisor;
	0x04 next;
);

0x780 IndependentBlend array[8] (
	0x01 EquationRgb;
	0x02 FuncRgbSrc;
	0x03 FuncRgbDst;
	0x04 EquationAlpha;
	0x05 FuncAlphaSrc;
	0x06 FuncAlphaDst;
	0x08 next;
);

0x7C0 VertexArrayLimit array[16] iova;

0x800 SetProgram array[6] ( // one for each stage (VertexA/VertexB/TessCtrl/TessEval/Geometry/Fragment)
	0x00 Config bits (
		0    Enable bool;
		4..7 StageId enum (
			0 VertexA;
			1 VertexB;
			2 TessCtrl;
			3 TessEval;
			4 Geometry;
			5 Fragment;
		);
	);
	0x01 Offset;
	0x03 NumRegisters;
	0x10 next;
);

0x8C0 FirmwareCall array[32];

0x8E0 ConstbufSelectorSize bits (0..16 Size;);
0x8E1 ConstbufSelectorAddr iova;
0x8E3 LoadConstbufOffset bits (0..15 Offset;);
0x8E4 LoadConstbufData array[16];

0x900 Bind array[5] ( // one for each stage
	// There used to be more methods here; however all of them became useless thanks to SetBindlessTexture.
	0x04 Constbuf bits (
		0    Valid bool;
		4..8 Index;
	);
	0x08 next;
);

0x982 SetBindlessTexture bits (
	0..2 ConstantBufferSlotSelect;
);

// Shadow scratch registers

0xD00 MmeFirmwareArgs array[8];
0xD08 MmeScratch array[16];

0xD18 MmeDriverConstbufIova;
0xD19 MmeDriverConstbufSize;
0xD1A MmeProgramIds array[6];
0xD20 MmeProgramOffsets array[6];

0xD26 MmeDepthRenderTargetIova;
0xD27 MmeStencilCullCriteria;
0xD28 MmeConservativeRasterDilateEnabled;
